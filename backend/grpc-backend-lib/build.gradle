plugins {
    id 'com.google.protobuf' version '0.8.15'
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    api "com.google.protobuf:protobuf-java:${protocVersion}"
    api "io.grpc:grpc-stub:${grpcVersion}"
    api "io.grpc:grpc-protobuf:${grpcVersion}"
    api "io.grpc:grpc-netty:${grpcVersion}"
    api "br.com.zup.beagle:framework:$beagle_version"
    api "javax.annotation:javax.annotation-api:${javaxVersion}"
    api "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    api "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java.srcDirs += "build/generated/source/proto/main/grpc"
        java.srcDirs += "build/generated/source/proto/main/java"
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        javaParameters = true
    }
}


apply from: rootProject.file('../maven-publish.gradle')